$schema: https://json-schema.org/draft/2020-12/schema
$id: https://schemas.wmo.int/wis2/broker/message/0.9.0/schema.yml
title: WMO WIS 2.0 broker message schema
description: WMO WIS 2.0 broker message schema

definitions:
  schemas:
    link:
      # from https://github.com/opengeospatial/ogcapi-features/blob/master/core/openapi/schemas/link.yaml
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          example: https://example.com/data/obs/123
        rel:
          type: string
          description: |
            The link relation describing the relationship between the link and the message.
            See https://www.iana.org/assignments/link-relations/link-relations.xhtml for the
            official list of IANA link relations.
          example: canonical
        type:
          type: string
          example: application/geo+json
        hreflang:
          type: string
          example: en
        title:
          type: string
          example: Trierer Strasse 70, 53115 Bonn
        length:
          type: integer
          description: number of bytes returned by the link
type: object
properties:
  id: 
    type: string
    format: uuid
    description: UUID (RFC4122) - Guarantee uniqueness of the message over (at least) a 24h period.
  version:
    type: string
    description: Version of message specification.
    const: v04
  type:
    type: string
    enum:
      - Feature
  geometry:
    oneOf:
      - enum:
        - null
      - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/schemas/pointGeoJSON.yaml'
      - $ref: 'https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/schemas/polygonGeoJSON.yaml'
  properties:
    type: object
    properties:
      pubtime:
        type: string
        format: date-time
        description: |
          Identifies the date/time of when the file was posted/published, in RFC3339 format.
          The publication date/time is critical for subscribers to prevent message loss by knowing
          their lag (how far behind the publisher they are).
      data_id: 
        type: string
        description: |
         Unique identifier of the data as defined by the data producer.
         Data producers SHOULD NOT use an opaque id, but something meaningful to support client side filtering.
      metadata_id:
        type: string
        description: Identifier for associated discovery metadata record to which the notification applies to.
      datetime:
        type: string
        format: date-time
        description: Identifies the date/time of the data being published, in RFC3339 format.
      start_datetime:
        type: string
        format: date-time
        description: Identifies the start date/time date of the data being published, in RFC3339 format.
      end_datetime:
        type: string
        format: date-time
        description: Identifies the end date/time date of the data being published, in RFC3339 format.
      cache:
        type: boolean
        description: |
          Whether the data in the notification should be cached (if not specified, the default value is `true`).
          When set to `false`, WIS2 Global Cache services do not cache the canonical link, and publish the
          notification with an unmodified canonical link (which points back to the endpoint as specified by the data producer).
          The notification is always published by the Global Cache regardless to the `cache` topic.
        default: true
      integrity:
        type: object
        description: Specifies a checksum to be applied to the data to ensure that the download is accurate.
        properties:
          method:
            type: string
            description: |
                A specific set of methods for calculating the checksum algorithms:
                * ``sha256``: the Secure Hash Algorithm 2, 256 bits, value is base64 encoded.
                * ``sha384``: the Secure Hash Algorithm 2, 384 bits, value is base64 encoded.
                * ``sha512``: the Secure Hash Algorithm 2, 512 bits, value is base64 encoded.
                * ``sha3-256``: the Secure Hash Algorithm 3, 256 bits, value is base64 encoded.
                * ``sha3-384``: the Secure Hash Algorithm 3, 384 bits, value is base64 encoded.
                * ``sha3-512``: the Secure Hash Algorithm 3, 512 bits, value is base64 encoded.
            enum:
              - sha256
              - sha384
              - sha512
              - sha3-256
              - sha3-384
              - sha3-512
          value:
            type: string
            description: Checksum value.
        required:
          - method
          - value
      content:
        type: object
        description: Used to embed small products inline within the message.
        properties:
          encoding:
            type: string
            description: Encoding of content
            enum:
              - utf-8
              - base64
              - gzip
          size:
            type: integer
            maximum: 4096
            description: |
              Number of bytes contained in the file. Together with the ``integrity`` property, it provides additional assurance that file content was accurately received.
              Note that the limit takes into account the data encoding used, for compressed data (for example `gzip`).
          value:
            type: string
            description: The inline content of the file.
            maxLength: 4096
        required:
          - encoding
          - size
          - value
    required:
      - pubtime
      - data_id
    oneOf:
      - allOf:
        - required:
          - start_datetime
          - end_datetime
      - allOf:
        - required:
          - datetime

  links:
    type: array
    minItems: 1
    items:
      $ref: '#/definitions/schemas/link'
required:
  - id
  - version
  - type
  - geometry
  - properties
  - links
example:
  $ref: https://raw.githubusercontent.com/wmo-im/wis2-notification-message/main/examples/example1.json
